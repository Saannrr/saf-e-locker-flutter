// =================================================================
// FILE: lib/main.dart
// =================================================================

import 'package:flutter/material.dart';
import 'package:saf_e_locker/screens/welcome_screen.dart';
import 'package:saf_e_locker/screens/login_screen.dart';
import 'package:saf_e_locker/screens/register_screen.dart';
import 'package:saf_e_locker/screens/admin_screen.dart';
import 'package:saf_e_locker/screens/splash_screen.dart';
import 'package:saf_e_locker/screens/account_screen.dart';
import 'package:saf_e_locker/screens/account_info_screen.dart';
import 'package:saf_e_locker/screens/transaction_history_screen.dart';

void main() {
  runApp(const SafELockerApp());
}

class SafELockerApp extends StatelessWidget {
  const SafELockerApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Saf-e Locker',
      debugShowCheckedModeBanner: false,
      theme: _buildTheme(),
      initialRoute: '/splash',
      routes: {
        '/splash': (context) => const SplashScreen(),
        '/login': (context) => const LoginScreen(),
        '/register': (context) => const RegisterScreen(),
        '/welcome': (context) => const WelcomeScreen(),
        '/admin': (context) => const AdminScreen(),
        '/account': (context) => const AccountScreen(),
        '/account-info': (context) => const AccountInfoScreen(),
        '/transaction-history': (context) => const TransactionHistoryScreen(),
      },
    );
  }

  ThemeData _buildTheme() {
    final baseTheme = ThemeData(
      colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
      fontFamily: 'Inter',
      scaffoldBackgroundColor: Colors.white,
    );

    return baseTheme.copyWith(
      textTheme: baseTheme.textTheme.apply(
        bodyColor: Colors.black,
        displayColor: Colors.black,
      ).copyWith(
        headlineMedium: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold, color: Colors.black),
        bodyLarge: const TextStyle(fontSize: 16, color: Colors.grey),
        labelLarge: const TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.white),
      ),
      appBarTheme: const AppBarTheme(
        backgroundColor: Colors.white,
        foregroundColor: Colors.black,
        elevation: 0,
      ),
      inputDecorationTheme: InputDecorationTheme(
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(8),
          borderSide: const BorderSide(color: Colors.grey, width: 1.0),
        ),
        focusedBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular(8),
          borderSide: const BorderSide(color: Colors.black, width: 1.5),
        ),
        contentPadding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.black,
          foregroundColor: Colors.white,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12),
          ),
          padding: const EdgeInsets.symmetric(vertical: 16),
        ),
      ),
      bottomSheetTheme: const BottomSheetThemeData(
        backgroundColor: Colors.transparent,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.vertical(top: Radius.circular(24)),
        ),
      ),
    );
  }
}

// =================================================================
// FILE: lib/screens/splash_screen.dart
// =================================================================

import 'package:flutter/material.dart';
import 'dart:async';

class SplashScreen extends StatefulWidget {
  const SplashScreen({super.key});

  @override
  State<SplashScreen> createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> {
  @override
  void initState() {
    super.initState();
    Timer(const Duration(seconds: 2), () {
      if (mounted) {
        Navigator.of(context).pushReplacementNamed('/login');
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(Icons.lock, size: 100, color: Colors.black),
            SizedBox(height: 24),
            Text(
              'Saf-e Locker',
              style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
            ),
          ],
        ),
      ),
    );
  }
}

// =================================================================
// FILE: lib/screens/account_screen.dart
// =================================================================

import 'package:flutter/material.dart';

class AccountScreen extends StatelessWidget {
  const AccountScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Account'),
        centerTitle: true,
      ),
      body: ListView(
        children: [
          _buildListTile(
            context,
            title: 'Account Information',
            onTap: () => Navigator.pushNamed(context, '/account-info'),
          ),
          _buildListTile(
            context,
            title: 'Transaction History',
            onTap: () => Navigator.pushNamed(context, '/transaction-history'),
          ),
          const Divider(),
          _buildListTile(
            context,
            title: 'Logout',
            textColor: Colors.red,
            onTap: () {
              Navigator.of(context).pushNamedAndRemoveUntil('/login', (route) => false);
            },
          ),
        ],
      ),
    );
  }

  Widget _buildListTile(BuildContext context, {required String title, required VoidCallback onTap, Color? textColor}) {
    return ListTile(
      title: Text(title, style: TextStyle(color: textColor ?? Colors.black)),
      trailing: const Icon(Icons.chevron_right),
      onTap: onTap,
    );
  }
}

// =================================================================
// FILE: lib/screens/account_info_screen.dart
// =================================================================

import 'package:flutter/material.dart';

class AccountInfoScreen extends StatelessWidget {
  const AccountInfoScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Account Information'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            _buildInfoRow('Username', 'John Doe'),
            const Divider(),
            _buildInfoRow('Email', 'john.doe@example.com'),
          ],
        ),
      ),
    );
  }

  Widget _buildInfoRow(String label, String value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 12.0),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(label, style: const TextStyle(fontSize: 16, color: Colors.grey)),
          Text(value, style: const TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
        ],
      ),
    );
  }
}

// =================================================================
// FILE: lib/screens/transaction_history_screen.dart
// =================================================================

import 'package:flutter/material.dart';

class TransactionHistoryScreen extends StatelessWidget {
  const TransactionHistoryScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Transaction History'),
      ),
      body: ListView.builder(
        itemCount: 5,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text('Locker Rental', style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16)),
                      SizedBox(height: 4),
                      Text('Rp 15.000,00'),
                    ],
                  ),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      const Text('2H 48M', style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16)),
                      const SizedBox(height: 4),
                      Container(
                        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                        decoration: BoxDecoration(
                          color: Colors.green.withOpacity(0.2),
                          borderRadius: BorderRadius.circular(8),
                        ),
                        child: const Text('Cleared', style: TextStyle(color: Colors.green, fontWeight: FontWeight.bold)),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}

// =================================================================
// FILE: lib/screens/login_screen.dart
// =================================================================

import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({super.key});

  @override
  State<LoginScreen> createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  bool _isPasswordObscured = true;

  @override
  void dispose() {
    _emailController.dispose();
    _passwordController.dispose();
    super.dispose();
  }
  
  void _loginAsUser() {
    Navigator.pushReplacementNamed(context, '/welcome');
  }
  
  void _loginAsAdmin() {
      Navigator.pushReplacementNamed(context, '/admin');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(24.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              const SizedBox(height: 80),
              const Text(
                'Saf-e Locker',
                textAlign: TextAlign.center,
                style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 40),
              
              TextField(
                controller: _emailController,
                decoration: const InputDecoration(labelText: 'Email'),
                keyboardType: TextInputType.emailAddress,
              ),
              const SizedBox(height: 16),
              TextField(
                controller: _passwordController,
                obscureText: _isPasswordObscured,
                decoration: InputDecoration(
                  labelText: 'Password',
                  suffixIcon: IconButton(
                    icon: Icon(
                      _isPasswordObscured ? Icons.visibility_off : Icons.visibility,
                    ),
                    onPressed: () {
                      setState(() {
                        _isPasswordObscured = !_isPasswordObscured;
                      });
                    },
                  )
                ),
              ),
              const SizedBox(height: 32),
              
              ElevatedButton(
                onPressed: _loginAsUser,
                child: const Text('Login as User'),
              ),
              const SizedBox(height: 12),
              ElevatedButton(
                onPressed: _loginAsAdmin,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.blueGrey[800],
                    foregroundColor: Colors.white,
                  ),
                child: const Text('Login as Admin'),
              ),
              const SizedBox(height: 24),

              Center(
                child: RichText(
                  text: TextSpan(
                    style: const TextStyle(color: Colors.black, fontSize: 14),
                    children: [
                      const TextSpan(text: "Don't have an account? "),
                      TextSpan(
                        text: 'Register here',
                        style: const TextStyle(
                          fontWeight: FontWeight.bold,
                          color: Colors.blue,
                          decoration: TextDecoration.underline,
                        ),
                        recognizer: TapGestureRecognizer()
                          ..onTap = () {
                            Navigator.pushNamed(context, '/register');
                          },
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// =================================================================
// FILE: lib/screens/register_screen.dart
// =================================================================

import 'package:flutter/material.dart';

class RegisterScreen extends StatefulWidget {
  const RegisterScreen({super.key});

  @override
  State<RegisterScreen> createState() => _RegisterScreenState();
}

class _RegisterScreenState extends State<RegisterScreen> {
  final _formKey = GlobalKey<FormState>();
  final _usernameController = TextEditingController();
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  bool _isPasswordObscured = true;

  @override
  void dispose() {
    _usernameController.dispose();
    _emailController.dispose();
    _passwordController.dispose();
    super.dispose();
  }

  void _register() {
    if (_formKey.currentState!.validate()) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Registration Successful!')),
      );
      Navigator.pop(context);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Create Account'),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(24.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              const SizedBox(height: 20),
              TextFormField(
                controller: _usernameController,
                decoration: const InputDecoration(labelText: 'Username'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a username';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _emailController,
                decoration: const InputDecoration(labelText: 'Email (unique)'),
                keyboardType: TextInputType.emailAddress,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter an email';
                  }
                  if (!RegExp(r'\S+@\S+\.\S+').hasMatch(value)) {
                    return 'Please enter a valid email address';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _passwordController,
                obscureText: _isPasswordObscured,
                decoration: InputDecoration(
                  labelText: 'Password',
                  suffixIcon: IconButton(
                    icon: Icon(
                      _isPasswordObscured ? Icons.visibility_off : Icons.visibility,
                    ),
                    onPressed: () {
                      setState(() {
                        _isPasswordObscured = !_isPasswordObscured;
                      });
                    },
                  )
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a password';
                  }
                  if (value.length < 8) {
                    return 'Password must be at least 8 characters long';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 32),
              ElevatedButton(
                onPressed: _register,
                child: const Text('Register'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// =================================================================
// FILE: lib/screens/welcome_screen.dart
// =================================================================

import 'package:flutter/material.dart';
import 'package:saf_e_locker/widgets/custom_draggable_sheet.dart';
// import 'package:saf_e_locker/widgets/locker_controls_sheet.dart'; // No longer used
import 'package:saf_e_locker/widgets/locker_found_sheet.dart';
import 'package:saf_e_locker/widgets/no_locker_found_sheet.dart';
import 'package:saf_e_locker/widgets/qr_scan_sheet.dart';
import 'package:saf_e_locker/widgets/payment_success_sheet.dart';
import 'package:saf_e_locker/widgets/payment_method_sheet.dart';
import 'package:saf_e_locker/widgets/extend_time_sheet.dart';
import 'package:saf_e_locker/widgets/terminate_dialog.dart';
import 'dart:async';
import 'dart:math';

class WelcomeScreen extends StatefulWidget {
  const WelcomeScreen({super.key});

  @override
  State<WelcomeScreen> createState() => _WelcomeScreenState();
}

class _WelcomeScreenState extends State<WelcomeScreen> {
  bool _isLockerActive = false;
  bool _isSearching = false;
  int _currentIndex = 0;
  Key _bodyKey = UniqueKey();

  // --- LOGIC METHODS ---
  void _findLocker() {
    setState(() => _isSearching = true);
    Timer(const Duration(seconds: 2), () {
      if (mounted) {
        setState(() => _isSearching = false);
        final bool isLockerFound = Random().nextBool();
        if (isLockerFound) {
          _showLockerFoundSheet();
        } else {
          _showNoLockerFoundSheet();
        }
      }
    });
  }

  void _showDraggableSheet(Widget child) {
    showModalBottomSheet(
      context: context,
      isScrollControlled: true,
      backgroundColor: Colors.transparent,
      builder: (_) => CustomDraggableSheet(child: child),
    );
  }

  void _showLockerFoundSheet() {
    _showDraggableSheet(LockerFoundSheet(onSelectPayment: () {
      Navigator.pop(context);
      _showPaymentMethodSheet();
    }));
  }

  void _showPaymentMethodSheet() {
    _showDraggableSheet(PaymentMethodSheet(onPaymentSelected: () {
      Navigator.pop(context);
      _showQrScanSheet();
    }));
  }

  void _showNoLockerFoundSheet() {
    _showDraggableSheet(NoLockerFoundSheet(onTryAgain: () {
      Navigator.pop(context);
      _findLocker();
    }));
  }

  void _showQrScanSheet() {
    _showDraggableSheet(QrScanSheet(onSuccess: () {
      Navigator.pop(context);
      _showPaymentSuccessSheet();
    }));
  }

  void _showPaymentSuccessSheet() {
    _showDraggableSheet(PaymentSuccessSheet(onDone: () {
      Navigator.pop(context);
      setState(() => _isLockerActive = true);
    }));
  }

  void _showExtendTimeSheet() {
    _showDraggableSheet(const ExtendTimeSheet());
  }

  void _showTerminateDialog() async {
    final bool? didConfirm = await showDialog<bool>(
      context: context,
      builder: (_) => const TerminateDialog(),
    );
    if (didConfirm == true && mounted) {
      setState(() {
        _isLockerActive = false;
        _bodyKey = UniqueKey();
      });
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Locker session terminated.')),
      );
    }
  }

  void _onItemTapped(int index) {
    if (index == 0) {
      setState(() { _currentIndex = index; });
    } else if (index == 1) {
      setState(() { _currentIndex = index; });
      Navigator.pushNamed(context, '/account').then((_) {
        setState(() { _currentIndex = 0; });
      });
    }
  }


  // --- UI BUILD METHODS ---
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        bottom: false,
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 24.0),
          child: Column(
            key: _bodyKey,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const SizedBox(height: 24.0),
              Text(
                'Welcome, User',
                style: Theme.of(context).textTheme.headlineMedium,
              ),
              const SizedBox(height: 8),
              Text(
                _isLockerActive
                  ? 'Remember your PIN if you can\'t use your\nphone to open the locker'
                  : 'You currently don\'t have any ongoing billing.',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              const SizedBox(height: 40),
              
              Expanded(
                child: _isLockerActive
                    ? _buildActiveLockerCard()
                    : _buildFindLockerCard(),
              ),
            ],
          ),
        ),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
      floatingActionButton: _isLockerActive ? null : FloatingActionButton(
        onPressed: _isSearching ? null : _findLocker,
        backgroundColor: Colors.grey[300],
        foregroundColor: Colors.black,
        elevation: 2,
        shape: const CircleBorder(),
        child: _isSearching
            ? const SizedBox(
                height: 24,
                width: 24,
                child: CircularProgressIndicator(strokeWidth: 3, color: Colors.black))
            : const Icon(Icons.add),
      ),
      bottomNavigationBar: _buildBottomAppBar(),
    );
  }

  Widget _buildFindLockerCard() {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Container(
            height: 200,
            width: double.infinity,
            decoration: BoxDecoration(
              color: Colors.grey[200],
              borderRadius: BorderRadius.circular(16),
            ),
            child: Icon(Icons.location_on_outlined, size: 80, color: Colors.grey[600]),
          ),
          const SizedBox(height: 24),
          const Text(
            "Press 'Rent' to find an available locker.",
            style: TextStyle(fontSize: 16, color: Colors.grey),
          ),
        ],
      ),
    );
  }

  Widget _buildActiveLockerCard() {
    return Column(
      children: [
        Container(
          padding: const EdgeInsets.all(12.0),
          decoration: BoxDecoration(
            color: Colors.grey[200],
            borderRadius: BorderRadius.circular(24.0),
            border: Border.all(color: Colors.grey[400]!),
          ),
          child: Row(
            children: [
              Container(
                padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 20.0),
                decoration: BoxDecoration(
                  color: Colors.grey[300],
                  borderRadius: BorderRadius.circular(16.0),
                  border: Border.all(color: Colors.grey[400]!),
                ),
                child: const Text('2H 48M', style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20, color: Colors.black)),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text('PIN ****', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500)),
                        Icon(Icons.visibility_off_outlined, size: 20),
                      ],
                    ),
                    const SizedBox(height: 8),
                    PopupMenuButton<String>(
                      onSelected: (String value) {
                        switch (value) {
                          case 'OPEN':
                            ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text('Locker Opened!')));
                            break;
                          case 'EXTEND':
                            _showExtendTimeSheet();
                            break;
                          case 'TERMINATE':
                            _showTerminateDialog();
                            break;
                        }
                      },
                      itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
                        const PopupMenuItem<String>(value: 'OPEN', child: Text('OPEN')),
                        const PopupMenuItem<String>(value: 'EXTEND', child: Text('EXTEND')),
                        const PopupMenuItem<String>(value: 'TERMINATE', child: Text('TERMINATE', style: TextStyle(color: Colors.red))),
                      ],
                      child: Container(
                        padding: const EdgeInsets.symmetric(horizontal: 12.0, vertical: 8.0),
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(12.0),
                          border: Border.all(color: Colors.grey[400]!),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Text('Active', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500)),
                            Icon(Icons.keyboard_arrow_down, size: 24),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }

  Widget _buildBottomAppBar() {
    return BottomAppBar(
      shape: const CircularNotchedRectangle(),
      notchMargin: 8.0,
      color: const Color(0xFFF8F3FB),
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20.0),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: <Widget>[
            _buildNavItem(
              icon: _currentIndex == 0 ? Icons.star : Icons.star_border,
              label: 'Home',
              isSelected: _currentIndex == 0,
              onTap: () => _onItemTapped(0),
            ),
            Padding(
              padding: const EdgeInsets.only(top: 35.0),
              child: Text(
                _isLockerActive ? '' : 'Rent',
                style: TextStyle(color: Colors.grey[600], fontSize: 12),
              ),
            ),
            _buildNavItem(
              icon: _currentIndex == 1 ? Icons.person : Icons.person_outline,
              label: 'Account',
              isSelected: _currentIndex == 1,
              onTap: () => _onItemTapped(1),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildNavItem({
    required IconData icon,
    required String label,
    required bool isSelected,
    required VoidCallback onTap,
  }) {
    final Color activeColor = Colors.deepPurple[800]!;
    final Color inactiveColor = Colors.grey[600]!;
    return InkWell(
      onTap: onTap,
      borderRadius: BorderRadius.circular(24),
      child: Container(
        width: 80,
        height: 56,
        padding: const EdgeInsets.symmetric(vertical: 4.0),
        decoration: BoxDecoration(
          color: isSelected ? Colors.deepPurple.withOpacity(0.15) : Colors.transparent,
          borderRadius: BorderRadius.circular(24),
        ),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(icon, color: isSelected ? activeColor : inactiveColor),
            const SizedBox(height: 4),
            Text(
              label,
              style: TextStyle(
                color: isSelected ? activeColor : inactiveColor,
                fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,
                fontSize: 12,
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// =================================================================
// FILE: lib/screens/admin_screen.dart
// =================================================================

import 'package:flutter/material.dart';

class AdminScreen extends StatefulWidget {
  const AdminScreen({super.key});

  @override
  State<AdminScreen> createState() => _AdminScreenState();
}

class _AdminScreenState extends State<AdminScreen> {
  int _currentIndex = 0;

  final List<Widget> _tabs = [
    const LockerManagementTab(),
    const UserManagementTab(),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Welcome, Admin'),
        actions: [
          IconButton(
            icon: const Icon(Icons.logout),
            tooltip: 'Logout',
            onPressed: () {
              Navigator.of(context).pushNamedAndRemoveUntil('/login', (route) => false);
            },
          ),
        ],
      ),
      body: _tabs[_currentIndex],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _currentIndex,
        onTap: (index) {
          setState(() {
            _currentIndex = index;
          });
        },
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.lock),
            label: 'Locker',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.people),
            label: 'User',
          ),
        ],
      ),
    );
  }
}

enum LockerStatus { used, available, maintenance }

class LockerManagementTab extends StatelessWidget {
  const LockerManagementTab({super.key});

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      padding: const EdgeInsets.all(16.0),
      itemCount: 10, 
      itemBuilder: (context, index) {
        LockerStatus status;
        if (index % 3 == 0) {
          status = LockerStatus.used;
        } else if (index % 3 == 1) {
          status = LockerStatus.available;
        } else {
          status = LockerStatus.maintenance;
        }
        
        return _LockerAdminCard(
          id: 'LKR${(index + 1).toString().padLeft(2, '0')}',
          tariff: 'Rp 5.000,00/hr',
          lidStatus: status == LockerStatus.used ? 'Closed' : 'Open',
          status: status,
        );
      },
    );
  }
}

class _LockerAdminCard extends StatelessWidget {
  final String id;
  final String tariff;
  final String lidStatus;
  final LockerStatus status;

  const _LockerAdminCard({
    required this.id,
    required this.tariff,
    required this.lidStatus,
    required this.status,
  });

  @override
  Widget build(BuildContext context) {
    bool isMaintenance = status == LockerStatus.maintenance;

    return Card(
      color: const Color(0xFFF3E5F5).withOpacity(0.5),
      elevation: 0,
      margin: const EdgeInsets.symmetric(vertical: 8.0),
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            Row(
              children: [
                Expanded(child: _buildInfoColumn('ID', id)),
                Expanded(child: _buildInfoColumn('Tariff', tariff)),
                Expanded(child: _buildInfoColumn('Lid', lidStatus)),
              ],
            ),
            const Divider(height: 24),
            Row(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Expanded(
                  flex: 2,
                  child: Column(
                    children: [
                      const SizedBox(height: 10),
                      SizedBox(
                        height: 68,
                        child: _buildStatusChip(status),
                      ),
                      const SizedBox(height: 8),
                      _buildActionButton(
                        'Reset PIN',
                        isMaintenance ? null : () => _showResetPinDialog(context)
                      ),
                      const SizedBox(height: 10),
                    ],
                  ),
                ),
                const SizedBox(width: 16),
                Expanded(
                  flex: 3,
                  child: Column(
                    children: [
                      _buildActionButton('Set Price', isMaintenance ? null : () => _showSetPriceDialog(context)),
                      const SizedBox(height: 8),
                      _buildActionButton('Disable/Enable', () => _showDisableLockerDialog(context)),
                      const SizedBox(height: 8),
                      _buildActionButton('Open', isMaintenance ? null : () {}),
                    ],
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildInfoColumn(String label, String value) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        Text(label, style: const TextStyle(color: Colors.grey, fontSize: 12)),
        const SizedBox(height: 4),
        Text(value, style: const TextStyle(fontWeight: FontWeight.bold, color: Colors.black)),
      ],
    );
  }

  Widget _buildStatusChip(LockerStatus status) {
    String text;
    Color bgColor;
    Color textColor;

    switch (status) {
      case LockerStatus.used:
        text = 'USED';
        bgColor = const Color(0xFFFDE4A4);
        textColor = const Color(0xFF795548);
        break;
      case LockerStatus.available:
        text = 'AVAILABLE';
        bgColor = const Color(0xFFC8E6C9);
        textColor = Colors.green.shade900;
        break;
      case LockerStatus.maintenance:
        text = 'MAINTENANCE';
        bgColor = const Color(0xFFFFCDD2);
        textColor = Colors.red.shade900;
        break;
    }

    return Container(
      width: double.infinity,
      padding: const EdgeInsets.symmetric(horizontal: 8),
      decoration: BoxDecoration(
        color: bgColor,
        borderRadius: BorderRadius.circular(14),
      ),
      child: Center(
        child: FittedBox(
          fit: BoxFit.contain,
          child: Text(
            text,
            textAlign: TextAlign.center,
            style: TextStyle(
              color: textColor,
              fontWeight: FontWeight.bold,
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildActionButton(String text, VoidCallback? onPressed) {
    return SizedBox(
      width: double.infinity,
      height: 40,
      child: ElevatedButton(
        onPressed: onPressed,
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.white,
          foregroundColor: Colors.black,
          disabledBackgroundColor: Colors.grey[300],
          elevation: 2,
          shadowColor: Colors.grey.withOpacity(0.3),
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(14)),
          padding: const EdgeInsets.symmetric(horizontal: 4)
        ),
        child: FittedBox(
          fit: BoxFit.scaleDown,
          child: Text(text, style: const TextStyle(fontSize: 12)),
        ),
      ),
    );
  }
}

class UserManagementTab extends StatelessWidget {
  const UserManagementTab({super.key});

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      itemCount: 20, 
      itemBuilder: (context, index) {
        return ListTile(
          leading: const Icon(Icons.person_outline),
          title: Text('User ${index + 1}'),
          subtitle: Text('user${index+1}@example.com'),
          onTap: () => _showUserDetailDialog(context, 'uid${index+1}', 'User ${index + 1}', 'user${index+1}@example.com'),
        );
      },
    );
  }
}

void _showResetPinDialog(BuildContext context) {
  showDialog(
    context: context,
    builder: (ctx) => AlertDialog(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      title: const Text('PIN has been reset'),
      content: const Text('We will now inform the User about this change.'),
      actions: [
        TextButton(
          child: const Text('Confirm'),
          onPressed: () => Navigator.of(ctx).pop(),
        ),
      ],
    ),
  );
}

void _showSetPriceDialog(BuildContext context) {
  showDialog(
    context: context,
    builder: (ctx) => AlertDialog(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      title: const Text('Set Price for the locker'),
      content: const TextField(
        decoration: InputDecoration(
          prefixText: 'Rp ',
          suffixText: '/hr',
          labelText: 'Price',
        ),
        keyboardType: TextInputType.number,
      ),
      actions: [
        TextButton(child: const Text('Cancel'), onPressed: () => Navigator.of(ctx).pop()),
        ElevatedButton(child: const Text('Confirm'), onPressed: () => Navigator.of(ctx).pop()),
      ],
    ),
  );
}

void _showDisableLockerDialog(BuildContext context) {
  showDialog(
    context: context,
    builder: (ctx) => AlertDialog(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      title: const Text('Locker has been disabled'),
      content: const Text('Locker status will be under maintenance.'),
      actions: [
        TextButton(
          child: const Text('Confirm'),
          onPressed: () => Navigator.of(ctx).pop(),
        ),
      ],
    ),
  );
}

void _showUserDetailDialog(BuildContext context, String uid, String username, String email) {
   showDialog(
    context: context,
    builder: (ctx) => AlertDialog(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      title: Text(username),
      content: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text('UID: $uid'),
          const SizedBox(height: 8),
          Text('Email: $email'),
        ],
      ),
      actions: [
        TextButton(child: const Text('Close'), onPressed: () => Navigator.of(ctx).pop()),
        ElevatedButton(
          child: const Text('Reset Password'), 
          onPressed: () {
             Navigator.of(ctx).pop(); 
             _showResetPinDialog(context); 
          }
        ),
      ],
    ),
  );
}

// =================================================================
// FILE: lib/widgets/custom_draggable_sheet.dart
// =================================================================

import 'package:flutter/material.dart';

class CustomDraggableSheet extends StatelessWidget {
  final Widget child;

  const CustomDraggableSheet({super.key, required this.child});

  @override
  Widget build(BuildContext context) {
    return DraggableScrollableSheet(
      initialChildSize: 0.6,
      minChildSize: 0.2,
      maxChildSize: 0.95,
      expand: false,
      builder: (_, scrollController) {
        return Container(
          decoration: const BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.vertical(top: Radius.circular(24)),
          ),
          child: SingleChildScrollView(
            controller: scrollController,
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                Padding(
                  padding: const EdgeInsets.only(top: 12.0, bottom: 12.0),
                  child: Center(
                    child: Container(
                      width: 40,
                      height: 4,
                      decoration: BoxDecoration(
                        color: Colors.grey[300],
                        borderRadius: BorderRadius.circular(2),
                      ),
                    ),
                  ),
                ),
                Flexible(child: child),
              ],
            ),
          ),
        );
      },
    );
  }
}

// =================================================================
// FILE: lib/widgets/locker_found_sheet.dart
// =================================================================

import 'package:flutter/material.dart';

class LockerFoundSheet extends StatefulWidget {
  final VoidCallback onSelectPayment;
  const LockerFoundSheet({super.key, required this.onSelectPayment});

  @override
  State<LockerFoundSheet> createState() => _LockerFoundSheetState();
}

class _LockerFoundSheetState extends State<LockerFoundSheet> {
  int _hours = 1;
  final double _pricePerHour = 2500.0;

  void _addHour() {
    setState(() {
      _hours++;
    });
  }

  void _subtractHour() {
    if (_hours > 1) {
      setState(() {
        _hours--;
      });
    }
  }
  
  String _formatCurrency(double value) {
    return 'Rp ${value.toStringAsFixed(2)}';
  }

  @override
  Widget build(BuildContext context) {
    final double totalPrice = _hours * _pricePerHour;

    return Padding(
      padding: const EdgeInsets.fromLTRB(24, 0, 24, 32),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          const Text(
            'We found a\nlocker!',
            style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
          ),
          const SizedBox(height: 8),
          const Text(
            'Next, choose how many hours\nfor your locker.',
            style: TextStyle(fontSize: 16, color: Colors.grey),
          ),
          const SizedBox(height: 24),
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 24.0, vertical: 32.0),
            decoration: BoxDecoration(
                color: Colors.grey[200],
                borderRadius: BorderRadius.circular(16)),
            child: Column(
              children: [
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    _buildControlButton(Icons.remove, _subtractHour),
                    Text('$_hours', style: const TextStyle(fontSize: 80, fontWeight: FontWeight.bold)),
                    _buildControlButton(Icons.add, _addHour),
                  ],
                ),
                const SizedBox(height: 24),
                Align(
                  alignment: Alignment.centerRight,
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                        Text('Price: ${_formatCurrency(_pricePerHour)}/Hour', style: const TextStyle(fontSize: 16)),
                        Text('Total: ${_formatCurrency(totalPrice)}', style: const TextStyle(fontSize: 16)),
                    ],
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(height: 24),
          ElevatedButton(
            onPressed: widget.onSelectPayment,
            child: const Text('Select payment method'),
          ),
        ],
      ),
    );
  }

  Widget _buildControlButton(IconData icon, VoidCallback onPressed) {
    return Container(
      decoration: BoxDecoration(
        color: Colors.grey[300],
        shape: BoxShape.circle,
      ),
      child: IconButton(
        icon: Icon(icon, color: Colors.black87),
        onPressed: onPressed,
      ),
    );
  }
}

// =================================================================
// FILE: lib/widgets/payment_method_sheet.dart
// =================================================================

import 'package:flutter/material.dart';

class PaymentMethodSheet extends StatelessWidget {
  final VoidCallback onPaymentSelected;
  const PaymentMethodSheet({super.key, required this.onPaymentSelected});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.fromLTRB(24, 0, 24, 32),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          const SizedBox(height: 16),
          _buildPaymentOption('Gopay', () => onPaymentSelected()),
          _buildPaymentOption('Shopeepay', () => onPaymentSelected()),
          _buildPaymentOption('Dana', () => onPaymentSelected()),
          _buildPaymentOption('Bank', () => onPaymentSelected()),
          _buildPaymentOption('QRIS', () => onPaymentSelected()),
        ],
      ),
    );
  }

  Widget _buildPaymentOption(String title, VoidCallback onTap) {
    return ListTile(
      title: Text(title, style: const TextStyle(fontWeight: FontWeight.bold)),
      onTap: onTap,
      trailing: const Icon(Icons.chevron_right),
    );
  }
}

// =================================================================
// FILE: lib/widgets/no_locker_found_sheet.dart
// =================================================================

import 'package:flutter/material.dart';

class NoLockerFoundSheet extends StatelessWidget {
  final VoidCallback onTryAgain;
  const NoLockerFoundSheet({super.key, required this.onTryAgain});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.fromLTRB(24, 0, 24, 32),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          const Text(
            'Oops!',
            textAlign: TextAlign.center,
            style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
          ),
          const SizedBox(height: 24),
          Icon(
            Icons.close_rounded,
            color: Colors.red[400],
            size: 100,
          ),
          const SizedBox(height: 24),
          const Text(
            "We couldn't find locker\nnearby",
            textAlign: TextAlign.center,
            style: TextStyle(fontSize: 18, color: Colors.grey),
          ),
          const SizedBox(height: 24),
          ElevatedButton(
            onPressed: onTryAgain,
            child: const Text('Try Again'),
          ),
        ],
      ),
    );
  }
}

// =================================================================
// FILE: lib/widgets/qr_scan_sheet.dart
// =================================================================

import 'dart:async';
import 'package:flutter/material.dart';

class QrScanSheet extends StatefulWidget {
  final VoidCallback onSuccess;
  const QrScanSheet({super.key, required this.onSuccess});

  @override
  State<QrScanSheet> createState() => _QrScanSheetState();
}

class _QrScanSheetState extends State<QrScanSheet> {
  @override
  void initState() {
    super.initState();
    Timer(const Duration(seconds: 4), () {
      if (mounted) {
        widget.onSuccess();
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.fromLTRB(24, 0, 24, 32),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          Text(
            'Scan the QR\ncode to pay',
            textAlign: TextAlign.center,
            style: Theme.of(context).textTheme.headlineSmall?.copyWith(
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 40),
          AspectRatio(
            aspectRatio: 1,
            child: Container(
              decoration: BoxDecoration(
                color: Colors.grey[200],
                borderRadius: BorderRadius.circular(24),
              ),
              child: const Center(
                child: Icon(Icons.qr_code_scanner, size: 150, color: Colors.black54),
              ),
            ),
          ),
          const SizedBox(height: 40),
          Text(
            '00:00',
            style: Theme.of(context).textTheme.displaySmall?.copyWith(
              fontWeight: FontWeight.bold,
            ),
          ),
        ],
      ),
    );
  }
}

// =================================================================
// FILE: lib/widgets/payment_success_sheet.dart
// =================================================================

import 'package:flutter/material.dart';

class PaymentSuccessSheet extends StatelessWidget {
  final VoidCallback onDone;
  const PaymentSuccessSheet({super.key, required this.onDone});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.fromLTRB(24, 0, 24, 32),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          const Text(
            'Success!',
            textAlign: TextAlign.center,
            style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
          ),
          const SizedBox(height: 24),
          const Icon(
            Icons.check_circle_outline,
            color: Colors.green,
            size: 100,
          ),
          const SizedBox(height: 24),
          const Text(
            "Your locker is the one\nwith flashing blue light",
            textAlign: TextAlign.center,
            style: TextStyle(fontSize: 18),
          ),
          const SizedBox(height: 8),
          const Text(
            'You can open your locker\nat any time',
            textAlign: TextAlign.center,
            style: TextStyle(fontSize: 16, color: Colors.grey),
          ),
          const SizedBox(height: 32),
          ElevatedButton(
            onPressed: onDone,
            child: const Text('Back to Home'),
          ),
        ],
      ),
    );
  }
}

// =================================================================
// FILE: lib/widgets/locker_controls_sheet.dart
// =================================================================

import 'package:flutter/material.dart';
import 'package:saf_e_locker/widgets/extend_time_sheet.dart';
import 'package:saf_e_locker/widgets/terminate_dialog.dart';
import 'package:saf_e_locker/widgets/custom_draggable_sheet.dart';

class LockerControlsSheet extends StatelessWidget {
  const LockerControlsSheet({super.key});

  void _showExtendTimeSheet(BuildContext context) {
    Navigator.pop(context); 
    showModalBottomSheet(
      context: context,
      isScrollControlled: true,
      backgroundColor: Colors.transparent,
      builder: (_) => const CustomDraggableSheet(child: ExtendTimeSheet()),
    );
  }

  void _showTerminateDialog(BuildContext context) {
    Navigator.pop(context); 
    showDialog(
      context: context,
      builder: (_) => const TerminateDialog(),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.fromLTRB(24, 0, 24, 24),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          const Text('PIN ****', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
          const SizedBox(height: 32),
          _buildOption(context, 'OPEN', () { Navigator.pop(context); }),
          const Divider(),
          _buildOption(context, 'EXTEND', () => _showExtendTimeSheet(context)),
          const Divider(),
          _buildOption(context, 'TERMINATE', () => _showTerminateDialog(context), isDestructive: true),
        ],
      ),
    );
  }

  Widget _buildOption(BuildContext context, String title, VoidCallback onTap, {bool isDestructive = false}) {
    return InkWell(
      onTap: onTap,
      child: Padding(
        padding: const EdgeInsets.symmetric(vertical: 16.0),
        child: Text(
          title,
          style: TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.bold,
            color: isDestructive ? Colors.red : Colors.black,
          ),
        ),
      ),
    );
  }
}

// =================================================================
// FILE: lib/widgets/extend_time_sheet.dart
// =================================================================

import 'package:flutter/material.dart';

class ExtendTimeSheet extends StatefulWidget {
  const ExtendTimeSheet({super.key});

  @override
  State<ExtendTimeSheet> createState() => _ExtendTimeSheetState();
}

class _ExtendTimeSheetState extends State<ExtendTimeSheet> {
  int _hours = 1;
  final double _pricePerHour = 2500.0;
  final double _penaltyMultiplier = 1.7;

  void _addHour() {
    setState(() {
      _hours++;
    });
  }

  void _subtractHour() {
    if (_hours > 1) {
      setState(() {
        _hours--;
      });
    }
  }

  String _formatCurrency(double value) {
    return 'Rp ${value.toStringAsFixed(2)}';
  }

  @override
  Widget build(BuildContext context) {
    final double totalPenaltyPrice = _hours * _pricePerHour * _penaltyMultiplier;
    
    return Padding(
      padding: const EdgeInsets.fromLTRB(24, 0, 24, 32),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          const Text(
            'Extend your time',
            style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
          ),
          const SizedBox(height: 8),
          const Text('Set the new extra hours for your locker.', style: TextStyle(color: Colors.grey)),
          const SizedBox(height: 32),
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 24.0, vertical: 32.0),
            decoration: BoxDecoration(
              color: Colors.grey[200],
              borderRadius: BorderRadius.circular(16),
            ),
            child: Column(
              children: [
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    _buildControlButton(Icons.remove, _subtractHour),
                    Text('$_hours', style: const TextStyle(fontSize: 80, fontWeight: FontWeight.bold)),
                    _buildControlButton(Icons.add, _addHour),
                  ],
                ),
              ],
            ),
          ),
          const SizedBox(height: 16),
          Text(
            'Penalty Since: ${_penaltyMultiplier}x\nPrice ${_formatCurrency(_pricePerHour)}/Hour\nTotal: ${_formatCurrency(totalPenaltyPrice)}',
            textAlign: TextAlign.center,
            style: const TextStyle(color: Colors.grey, height: 1.5),
          ),
          const SizedBox(height: 32),
          ElevatedButton(
            onPressed: () {
              Navigator.pop(context);
            },
            child: const Text('Confirm'),
          ),
        ],
      ),
    );
  }

  Widget _buildControlButton(IconData icon, VoidCallback onPressed) {
    return Container(
      decoration: BoxDecoration(
        color: Colors.grey[300],
        shape: BoxShape.circle,
      ),
      child: IconButton(
        icon: Icon(icon, color: Colors.black87),
        onPressed: onPressed,
      ),
    );
  }
}

// =================================================================
// FILE: lib/widgets/terminate_dialog.dart
// =================================================================

import 'package:flutter/material.dart';

class TerminateDialog extends StatelessWidget {
  const TerminateDialog({super.key});

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      title: const Text('Terminate?', style: TextStyle(fontWeight: FontWeight.bold)),
      content: const Text('By terminating, your locker will be opened and the rest of your duration will be gone forever.'),
      actions: [
        TextButton(
          onPressed: () {
            Navigator.of(context).pop(false);
          },
          child: const Text('Cancel', style: TextStyle(color: Colors.grey)),
        ),
        TextButton(
          onPressed: () {
            Navigator.of(context).pop(true);
          },
          child: const Text('Confirm', style: TextStyle(color: Colors.red)),
        ),
      ],
    );
  }
}
